{"name":"Sfexplorer","tagline":"Meta Data Analyzer For Salesforce","body":"<apex:page showHeader=\"false\" sidebar=\"false\" applyHtmlTag=\"false\" docType=\"html-5.0\" standardStylesheets=\"false\" >\r\n    <html>\r\n        <head>\r\n            <meta charset=\"utf-8\"/>\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\r\n            <apex:includeScript value=\"//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.js\"/>\r\n\r\n            <apex:includeScript value=\"//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js\"/>\r\n            <apex:includeScript value=\"{!URLFOR($Resource.adminTheme,  'timeline/js/d3.v3.min.js')}\"/>\r\n            <apex:includeScript value=\"{!URLFOR($Resource.adminTheme, 'timeline/js/complete.ly.1.0.1.min.js')}\"/>\r\n            <apex:includeScript value=\"{!URLFOR($Resource.adminTheme, 'timeline/js/springy.js')}\"/>\r\n            <apex:includeScript value=\"{!URLFOR($Resource.adminTheme, 'timeline/js/springyui.js')}\"/>\r\n            <apex:includeScript value=\"//cdnjs.cloudflare.com/ajax/libs/jsforce/1.4.1/jsforce.min.js\"/>\r\n            \r\n            <link rel=\"stylesheet\" href=\"{!URLFOR($Resource.SF1Theme, 'dist/css/bootstrap.min.css')}\"/>\r\n            <link rel=\"stylesheet\" href=\"{!URLFOR($Resource.adminTheme, 'timeline/font-awesome/css/font-awesome.min.css')}\"/>\r\n            \r\n            \r\n            \r\n            <style type=\"text/css\">\r\n                label, .btn{\r\n                font-weight: normal;\r\n                }\r\n                .form-control{\r\n                color: #3c3d3e;\r\n                }\r\n                .req:after{\r\n                padding-right: 5px;\r\n                content: \"*\";\r\n                color:#b21522;\r\n                }\r\n                .err{\r\n                color:#b21522;\r\n                }\r\n                select.err, input.err {\r\n                border: 1px solid #b21522; \r\n                background: #fce1e0;\r\n                color: #b21522;\r\n                font-family:inherit;\r\n                }\r\n                .err::-webkit-input-placeholder{\r\n                color: #b21522;\r\n                font-family:inherit;\r\n                }\r\n                err:-ms-input-placeholder{\r\n                color: #b21522;\r\n                font-family:inherit;\r\n                }\r\n                .input-group .form-control:not(:first-child):not(:last-child), .input-group-addon:not(:first-child):not(:last-child), .input-group-btn:not(:first-child):not(:last-child){\r\n                border-radius: 2px;\r\n                }\r\n                .input-group .form-control:last-child, .input-group-addon:last-child, .input-group-btn:first-child>.btn-group:not(:first-child)>.btn, .input-group-btn:first-child>.btn:not(:first-child), .input-group-btn:last-child>.btn, .input-group-btn:last-child>.btn-group>.btn, .input-group-btn:last-child>.dropdown-toggle{\r\n                border-radius: 2px;\r\n                }\r\n                .progress-bar.animate {\r\n                width: 100%;\r\n                }\r\n                \r\n                .modal-backdrop {\r\n                opacity: 0.5;\r\n                }\r\n                \r\n                .modal-dialog {\r\n                -webkit-transform: translate(0px, 50%);\r\n                transform: translate(0px, 50%);\r\n                }\r\n                \r\n                .progress-popup {\r\n                margin-bottom: 0;\r\n                }\r\n                \r\n                .main,.secondary,.tertiary{\r\n                padding-top: 40px;\r\n                }       \r\n\r\n                \r\n                .node circle {\r\n                fill: #fff;\r\n                stroke: darkred;\r\n                stroke-width: 1.5px;\r\n \r\n                }\r\n                \r\n                .tertiary .node {\r\n                font-size: 10px;\r\n                cursor: pointer;  \r\n                }\r\n                \r\n                .link {\r\n                fill: none;\r\n                stroke: #ccc;\r\n                stroke-width: 1.5px;\r\n             \r\n                }\r\n                \r\n                .titleSeparatingColon{\r\n                display:none;\r\n                }\r\n                .pageTitleIcon{\r\n                display:none;\r\n                }\r\n                .tooltip {\r\n                position: absolute;\r\n                color: #FFFFFF;\r\n                background: #080808;\r\n                text-align: center;\r\n                border-radius: 4px;\r\n                padding: 2px 4px 0px 4px;\r\n                height: 22px;\r\n                pointer-events: none;\r\n                }\r\n                \r\n                .tooltip .title {\r\n                font-size: 13px;\r\n                }\r\n                \r\n                .tooltip .name {\r\n                font-weight:bold;\r\n                }\r\n                .panel .affix{\r\n                background-color: transparent;\r\n                border-bottom-color: transparent;\r\n                \r\n                }\r\n                .viz .row, .viz .panel {\r\n                \tbackground-color:transparent;\r\n                }\r\n                \r\n                path.arc{\r\n                fill: transparent;\r\n                cursor:move;\r\n                \r\n                }\r\n                \r\n                \r\n            </style>\r\n        </head>\r\n        <body>\r\n            <div  id=\"container\">\r\n                <div class=\"row\">\r\n                    \r\n                    \r\n                    <nav class=\"navbar navbar-inverse navbar-fixed-top  affix\" role=\"navigation\">\r\n                        <div class=\"col-lg-6 col-md-6\">\r\n                            <div class=\"navbar-header\">\r\n                                <h2 style=\"display:inline;\">\r\n                                    <small>Salesforce Object Explorer</small>\r\n                                </h2>\r\n                                <button type=\"button\" id=\"info\" class=\"btn btn-default \" ><i class=\"fa fa-umbrella\"></i></button>\r\n                                <button type=\"button\" id=\"toggleGraph\" class=\"btn btn-default \" ><i class=\"fa fa-anchor\"></i>Toggle Visual/Graph</button>\r\n                                <button type=\"button\" id=\"toggleViz\" class=\"btn btn-default \" ><i class=\"fa fa-graph\"></i>Toggle Visualization</button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class=\"col-lg-6 col-md-6\">\r\n                            \r\n                            <div class=\"input-group\" id=\"searchMenu\">\r\n                                \r\n                                <div class=\"input-group-btn\">\r\n                                    <button type=\"button\" class=\"btn btn-default \" id=\"qButton\" aria-expanded=\"false\" onclick=\"queryThis()\">Query</button>\r\n                                    \r\n                                    <ul class=\"dropdown-menu scrollable-menu q\" role=\"menu\">    \r\n                                    </ul>\r\n                                    \r\n                                </div>\r\n                                <div id=\"qForm\">\r\n                                    \r\n                                </div>\r\n                                <!---   <input class=\"form-control qForm\" type=\"text\" id=\"qForm\" placeholder=\"query\" />--->\r\n                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </nav>\r\n                    <div class=\"row hidden\"  id=\"infoWell\">\r\n                        <div class=\"col-lg-6 col-md-6\">\r\n                            <div class=\"well\">\r\n                                <ul class=\"list-group\">\r\n                                    <li class=\"list-group-item\" >This is a simple tool for exploring all of the objects in your Salesforce instance.</li>\r\n                                    <li class=\"list-group-item\" >Query an object and then view the fields and relationships for that object. </li>\r\n                                    <li class=\"list-group-item\" >Click on a field to see data for the field and its usage.</li>\r\n                                    <li class=\"list-group-item\" >The explorer is powered by remote object queries which makes it quick and efficient!</li>\r\n                                    \r\n                                    \r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"row main show\">\r\n                    \r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"panel panel-primary\">\r\n                            <div class=\"panel-heading appType\">\r\n                                \r\n                                \r\n                            </div>\r\n                            <div class=\"panel-body\">\r\n                                <div id=\"fields\" >\r\n                                </div>\r\n                                \r\n                            </div>                                \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"panel panel-primary\">\r\n                            <div class=\"panel-heading appType\">\r\n                                <h4 class=\"panel-heading\">\r\n                                    Object Relationships\r\n                                </h4>\r\n                            </div>\r\n                            <div class=\"panel-body\">\r\n                                \r\n                                <div id=\"vis\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                        <div class=\"panel panel-primary\">\r\n                            <div class=\"panel-heading objType\">\r\n                                <h4 class=\"panel-heading\">\r\n                                    Record Types \r\n                                </h4>\r\n                            </div>\r\n                            <div class=\"panel-body\">\r\n                                <div id=\"objects\" >\r\n                                </div>\r\n                                \r\n                            </div>                                \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                <div class=\"viz hidden\">\r\n                    <div class=\"row secondary show\">\r\n                        \r\n                        \r\n                        <div class=\"col-lg-12 col-xs-12\">\r\n                            <div class=\"panel panel-primary\">\r\n                                <div class=\"panel-heading objType affix\"  >\r\n                                    <apex:sectionHeader title=\"Visual Representation\" subtitle=\"Child Relationships\" />\r\n                                    <h4 id=\"title1\">\r\n                                    </h4>\r\n                                </div>\r\n                                <div class=\"panel-body\">\r\n                                    <div id=\"chart\" style=\"padding-top: 20px\">\r\n                                    </div>\r\n                                    \r\n                                </div>                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row tertiary hidden\">\r\n                        \r\n                        \r\n                        <div class=\"col-lg-12 col-xs-12\">\r\n                            <div class=\"panel panel-primary\">\r\n                                <div class=\"panel-heading objType affix\" style=\"width:100%\">\r\n                                    <apex:sectionHeader title=\"Visual Representation\" subtitle=\"Child Relationships\"/>\r\n                                    <h4 id=\"title2\">\r\n                                    </h4>\r\n                                </div>\r\n                                <div class=\"panel-body\">\r\n                                    <div id=\"chart2\" >\r\n                                    </div>\r\n                                    \r\n                                </div>                                \r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>   \r\n            \r\n            <script>\r\n            var data\r\n            var $j = jQuery.noConflict();\r\n            var globalJson;\r\n            var globalLinks;\r\n            var globalTitle;\r\n            //Tool tip holder\r\n            var tiper = d3.select('body')\r\n            .append(\"div\")\r\n            .attr(\"width\",\"100%\")\r\n            .attr(\"class\", \"tooltip\")\r\n            .style(\"opacity\", 0);\r\n            \r\n            function hideTip(){\r\n                 tiper.transition()\r\n                .style(\"opacity\", 0)\r\n            }\r\n            \r\n            //var w = document.getElementById('container').offsetWidth;\r\n            //var h = w *1.5;\r\n            //var c20c = d3.scale.category20c();\r\n            //create links \r\n            //   d3.select(window).on(\"resize\",  throttle);\r\n            function linkObj(source){\r\n                this.name = source;\r\n                this.children = [];\r\n            }\r\n            function fNodeObj(source, id, value){\r\n                this.name = source;\r\n                this.id = id;\r\n                this.value = value;\r\n                this.children = [];\r\n            }\r\n            \r\n            function fLinkObj(source, target, type){\r\n                this.source = source;\r\n                this.target = target;\r\n                this.value = type;\r\n            }\r\n            \r\n            \r\n            $j('#info').click(function(){\r\n                $j('#infoWell').toggleClass('hidden show')\r\n                \r\n            })\r\n            var qTerm;\r\n            // $j(\".secondary\").css('display','none');\r\n            \r\n            $j(\"#toggleGraph\").click(function(){\r\n                $j(\".viz\").toggleClass('hidden show')\r\n                $j(\".main\").toggleClass('hidden show')\r\n            })\r\n            $j(\"#toggleViz\").click(function(){\r\n                $j(\".secondary\").toggleClass('hidden show')\r\n                $j(\".tertiary\").toggleClass('hidden show')\r\n            })\r\n            \r\n            /*   var throttleTimer;\r\n            function throttle() {\r\n                window.clearTimeout(throttleTimer);\r\n                throttleTimer = window.setTimeout(function () {\r\n                    redraw();\r\n                    \r\n                }, 200);}\r\n            function redraw(){\r\n                w = document.getElementById('container').offsetWidth - 20;\r\n                h = document.getElementById('container').offsetHeight - 30;\r\n                if(globalJson != null){\r\n                    createForce(globalJson, globalTitle);\r\n                }\r\n                if(globalLinks != null){\r\n                    createG(globalLinks);\r\n                }\r\n                \r\n            }\r\n            */\r\n            \r\n            function createForce(json, dArray){\r\n                globalJson = json;\r\n                globalTitle = dArray;\r\n                var root;\r\n                var m, n,\r\n                    w = 1280,\r\n                    h = 900,\r\n                    rx = w / 2,\r\n                    ry = h / 2,\r\n                    r = 7;\r\n                \r\n                d3.selectAll(\"#chart2 svg\").remove();\r\n                \r\n                var force = d3.layout.force()\r\n                .size([960, 1000])\r\n                .gravity(.01)\r\n                .linkDistance(75)\r\n                .charge(-200)\r\n                .friction(.9)\r\n                .theta(0.9)\r\n                .alpha(0.9)\r\n                .on(\"tick\", tick);\r\n                \r\n                var svg = d3.select(\"#chart2\").append(\"svg\")\r\n                .attr(\"width\", w)\r\n                .attr(\"height\", h)\r\n\r\n                var vis = svg.append(\"svg:svg\")\r\n                .attr(\"width\", w-30)\r\n                .attr(\"height\", w-30)\r\n                .attr(\"transform\", \"translate(\" + h + \",\" + 600+ \")\")\r\n                .append(\"svg:g\")\r\n\r\n                \r\n                link = vis.selectAll(\".link\"),\r\n                node = vis.selectAll(\".node\");\r\n                \r\n                root = json.nodes;\r\n                update();\r\n                \r\n                function update() {\r\n                    var nodes = flatten(root),\r\n                        links = d3.layout.tree().links(nodes);\r\n                    \r\n                    force\r\n                    .nodes(nodes)\r\n                    .links(links)\r\n                    .start();\r\n                    \r\n                    var grads = svg.append(\"defs\").selectAll(\"radialGradient\")\r\n                    .data(nodes)\r\n                    .enter()\r\n                    .append(\"radialGradient\")\r\n                    .attr(\"gradientUnits\", \"objectBoundingBox\")\r\n                    .attr(\"cx\", 0)\r\n                    .attr(\"cy\", 0)\r\n                    .attr(\"r\", \"100%\")\r\n                    .attr(\"id\", function(d, i) { return \"grad\" + i; });\r\n                    \r\n                    grads.append(\"stop\")\r\n                    .attr(\"offset\", \"0%\")\r\n                    .style(\"stop-color\", \"white\");\r\n                    \r\n                    \r\n                    m = dArray.length;\r\n                    console.log(\"m \" + m.length);\r\n                    \r\n                    var color = d3.scale.category20()\r\n                    .domain(d3.range(m));\r\n                    grads.append(\"stop\")\r\n                    .attr(\"offset\", \"100%\")\r\n                    .style(\"stop-color\",  function(d) {return color(d.name); });\r\n                    // Update the links…\r\n                    link = link.data(links, function(d) { return d.target.id; });\r\n                    \r\n                    // Exit any old links.\r\n                    link.exit().remove();\r\n                    \r\n                    // Enter any new links.\r\n                    link.enter().insert(\"line\", \".node\")\r\n                    .attr(\"class\", \"link\")\r\n                    .attr(\"x1\", function(d) { return d.source.x; })\r\n                    .attr(\"y1\", function(d) { return d.source.y; })\r\n                    .attr(\"x2\", function(d) { return d.target.x; })\r\n                    .attr(\"y2\", function(d) { return d.target.y; });\r\n                    \r\n                    // Update the nodes…\r\n                    node = node.data(nodes, function(d) { return d.id; }).style(\"stop-color\",  function(d) { return color(d.name); });\r\n                    \r\n                    \r\n                    // Exit any old nodes.\r\n                    node.exit().remove();\r\n                    \r\n                    // Enter any new nodes.\r\n                    var nodeEnter = node.enter().append(\"circle\")\r\n                    .attr(\"class\", \"node\")\r\n                    .attr(\"cx\", function(d) { return d.x = Math.max(r, Math.min(w - r, d.x)); })\r\n        \t\t\t.attr(\"cy\", function(d) { return d.y = Math.max(r, Math.min(h - r, d.y)); })\r\n                    .attr(\"r\", function(d) { return Math.sqrt(d.size) / 7 || 7.5; })\r\n                    .style(\"fill\", function(d, i) {\r\n                        return \"url(#grad\" + i + \")\";\r\n                    })\r\n                    .on(\"mouseover\", function(d){\r\n                        tiper.transition()\r\n                        .style(\"opacity\", 0)\r\n                        tiper\r\n                        .transition()\r\n                        .style(\"opacity\", .9)\r\n                        tiper.html('<p>'  +  d.name +'</p>')\r\n                        .style(\"left\", (d3.event.pageX) + \"px\")\r\n                        .style(\"top\", (d3.event.pageY - 28) + \"px\");\r\n                    })\r\n                    .on(\"mouseout\", hideTip)\r\n                    .on(\"click\", click)\r\n                    .call(force.drag);\r\n                    \r\n                    var text = svg.append(\"svg:g\").selectAll(\"circle\")\r\n                    .data(force.nodes())\r\n                    .enter().append(\"svg:g\");\r\n                    \r\n                    \r\n                }\r\n                \r\n                function tick() {\r\n                    link.attr(\"x1\", function(d) { return d.source.x; })\r\n                    .attr(\"y1\", function(d) { return d.source.y; })\r\n                    .attr(\"x2\", function(d) { return d.target.x; })\r\n                    .attr(\"y2\", function(d) { return d.target.y; });\r\n                    \r\n                    node\r\n                    .attr(\"cx\", function(d) { return d.x = Math.max(r, Math.min(w - r, d.x)); })\r\n        \t\t\t.attr(\"cy\", function(d) { return d.y = Math.max(r, Math.min(h - r, d.y)); })\r\n                    \r\n                    \r\n                }\r\n                \r\n                \r\n                // Toggle children on click.\r\n                function click(d) {\r\n                    if (!d3.event.defaultPrevented) {\r\n                        if (d.children) {\r\n                            d._children = d.children;\r\n                            d.children = null;\r\n                        } else {\r\n                            d.children = d._children;\r\n                            d._children = null;\r\n                        }\r\n                        update();\r\n                    }\r\n                }\r\n                \r\n                // Returns a list of all nodes under the root.\r\n                function flatten(root) {\r\n                    var nodes = [], i = 0;\r\n                    \r\n                    function recurse(node) {\r\n                        if (node.children) node.children.forEach(recurse);\r\n                        if (!node.id) node.id = ++i;\r\n                        nodes.push(node);\r\n                    }\r\n                    \r\n                    recurse(root);\r\n                    return nodes;\r\n                }\r\n                \r\n            }\r\n            \r\n            function createG(mJson){\r\n                globalLinks = mJson;\r\n                d3.selectAll(\"#chart svg\").remove();\r\n                \r\n                var\r\n                    w = 1280,\r\n                    h = 900,\r\n                    rx = w / 2 + 100,\r\n                    ry = h / 2 ,\r\n                    m0,\r\n                    rotate = 0,\r\n                    paddingL = 30,\r\n                    paddingT = 30;\r\n                \r\n                var cluster = d3.layout.tree()\r\n                .size([360, ry-120 ])\r\n                .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\r\n                \r\n                var diagonal = d3.svg.diagonal.radial()\r\n                .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });\r\n                \r\n                var svg = d3.select(\"#chart\").append(\"svg\")\r\n                .attr(\"width\", w- 30  + \"px\")\r\n                .attr(\"height\", w -30 + \"px\")\r\n                \r\n                var vis = svg.append(\"svg:svg\")\r\n                .attr(\"width\", w-30)\r\n                .attr(\"height\", w-30)\r\n                .append(\"svg:g\")\r\n                .attr(\"transform\", \"translate(\" + rx + \",\" + (ry + 100)+  \")\");\r\n                \r\n                vis.append(\"svg:path\")\r\n                .attr(\"class\", \"arc\")\r\n                .attr(\"d\", d3.svg.arc().innerRadius(ry - 120).outerRadius(ry).startAngle(0).endAngle(2 * Math.PI))\r\n                .on(\"mousedown\", mousedown);\r\n                \r\n                \r\n                var nodes = cluster.nodes(mJson);\r\n                \r\n                var link = vis.selectAll(\"path.link\")\r\n                .data(cluster.links(nodes))\r\n                .enter().append(\"svg:path\")\r\n                .attr(\"class\", \"link\")\r\n                .attr(\"d\", diagonal);\r\n                \r\n                var node = vis.selectAll(\"g.node\")\r\n                .data(nodes)\r\n                .enter().append(\"svg:g\")\r\n                .attr(\"class\", \"node\")\r\n                .attr(\"transform\", function(d) { return \"rotate(\" + (d.x - 90) + \")translate(\" + d.y   + \")\"; })\r\n                \r\n                node.append(\"svg:circle\")\r\n                .attr(\"r\", 3);\r\n                \r\n                node.append(\"svg:text\")\r\n                .attr(\"dx\", function(d) { return d.x < 180 ? 8 : -8; })\r\n                .attr(\"dy\", \".31em\")\r\n                .attr(\"text-anchor\", function(d) { return d.x < 180 ? \"start\" : \"end\"; })\r\n                .attr(\"transform\", function(d) { return d.x < 180 ? null : \"rotate(180)\"; })\r\n                .text(function(d) { return d.name; });\r\n                \r\n                \r\n                d3.select(window)\r\n                .on(\"mousemove\", mousemove)\r\n                .on(\"mouseup\", mouseup);\r\n                \r\n                function mouse(e) {\r\n                    return [e.pageX - rx, e.pageY - ry];\r\n                }\r\n                \r\n                function mousedown() {\r\n                    m0 = mouse(d3.event);\r\n                    d3.event.preventDefault();\r\n                }\r\n                \r\n                function mousemove() {\r\n                    if (m0) {\r\n                        var m1 = mouse(d3.event),\r\n                            dm = Math.atan2(cross(m0, m1), dot(m0, m1)) * 180 / Math.PI,\r\n                            tx = \"translate3d(0,\" + (ry - rx) + \"px,0)rotate3d(0,0,0,\" + dm + \"deg)translate3d(0,\" + (rx - ry) + \"px,0)\";\r\n                        svg\r\n                        .style(\"-moz-transform\", tx)\r\n                        .style(\"-ms-transform\", tx)\r\n                        .style(\"-webkit-transform\", tx);\r\n                    }\r\n                }\r\n                \r\n                function mouseup() {\r\n                    if (m0) {\r\n                        var m1 = mouse(d3.event),\r\n                            dm = Math.atan2(cross(m0, m1), dot(m0, m1)) * 180 / Math.PI,\r\n                            tx = \"rotate3d(0,0,0,0deg)\";\r\n                        \r\n                        rotate += dm;\r\n                        if (rotate > 360) rotate -= 360;\r\n                        else if (rotate < 0) rotate += 360;\r\n                        m0 = null;\r\n                        \r\n                        svg\r\n                        .style(\"-moz-transform\", tx)\r\n                        .style(\"-ms-transform\", tx)\r\n                        .style(\"-webkit-transform\", tx);\r\n                        \r\n                        vis\r\n                        .attr(\"transform\", \"translate(\" + rx + \",\" + (ry + 100) + \")rotate(\" + rotate + \")\")\r\n                        .selectAll(\"g.node text\")\r\n                        .attr(\"dx\", function(d) { return (d.x + rotate) % 360 < 180 ? 8 : -8; })\r\n                        .attr(\"text-anchor\", function(d) { return (d.x + rotate) % 360 < 180 ? \"start\" : \"end\"; })\r\n                        .attr(\"transform\", function(d) { return (d.x + rotate) % 360 < 180 ? null : \"rotate(180)\"; });\r\n                    }\r\n                }\r\n                \r\n                function cross(a, b) {\r\n                    return a[0] * b[1] - a[1] * b[0];\r\n                }\r\n                \r\n                function dot(a, b) {\r\n                    return a[0] * b[0] + a[1] * b[1];\r\n                }\r\n                \r\n                \r\n                \r\n            }\r\n            \r\n            var conn = new jsforce.Connection({ accessToken: '{!$Api.Session_Id}' });\r\n            queryThis();\r\n            \r\n            conn.describeGlobal(function(err, res) {\r\n                if (err) { return console.error(err); }\r\n                \r\n                var availableTags = [];\r\n                var labels = res.sobjects;\r\n                labels.forEach(function(d){availableTags.push(d.name.toLowerCase());})\r\n                var auto = completely(document.getElementById('qForm'), {\r\n                    fontSize : '14px',\r\n                    fontFamily : 'Arial',\r\n                    color:'#494949',\r\n                });\r\n                auto.options = availableTags;\r\n                $j(auto.input).addClass(\"autoIn form-control\");\r\n                $j(auto.wrapper).addClass(\"form-control\");\r\n                $j(auto.hint).addClass(\"form-control\");\r\n                $j(auto.prompt).addClass(\"form-control drop\");\r\n                $j(auto.dropDown).addClass(\"drop\");\r\n                \r\n                auto.onChange = function(text){\r\n                    \r\n                    if(text.toLowerCase() != text){\r\n                        auto.hint.value = text.toLowerCase();\r\n                        auto.input.value = text.toLowerCase();\r\n                        \r\n                        return;\r\n                    }\r\n                    \r\n                    auto.repaint(); \r\n                    \r\n                }\r\n                \r\n                setTimeout(function() {\r\n                    auto.input.focus();\r\n                },0);\r\n                $j(\"#qButton\").on('click', queryThis());\r\n                $j(\"a\").click(function(e){\r\n                    e.preventDefault();\r\n                })\r\n            });\r\n            \r\n            \r\n            \r\n            function queryThis(){\r\n                d3.selectAll(\"h4 text\").remove();\r\n                \r\n                d3.selectAll(\"#chart svg\").remove();\r\n                d3.selectAll(\"#chart2 svg\").remove();\r\n                d3.selectAll(\"#vis p\").remove();\r\n                d3.selectAll(\"#vis ul\").remove();\r\n                d3.selectAll(\"#objects ul\").remove();\r\n                \r\n                var field = ''; \r\n                var objName = '';\r\n                var fieldName = '';\r\n                \r\n                field = $j(\".autoIn\").val();   \r\n                \r\n                if(field == null || field == ''){\r\n                    field = 'Account';\r\n                }\r\n                \r\n                d3.selectAll(\"h4\").append(\"text\").text(field);\r\n                \r\n                conn.sobject(field).describe$(function(err, meta) {\r\n                    var links = [];\r\n                    var mySet = [];\r\n                    // var fLinks = [];\r\n                    var fSet = [];\r\n                    \r\n                    \r\n                    var mData;\r\n                    if (err) { return console.error(err); }\r\n                    d3.selectAll('.enter').remove();\r\n                    \r\n                    fieldData= meta.fields;\r\n                    \r\n                    var rData = meta.childRelationships;\r\n                    \r\n                    var recData = meta.recordTypeInfos;\r\n                    \r\n                    var layData = meta.namedLayoutInfos;\r\n                    \r\n                    var parent = field;\r\n                    var myParent = {};\r\n                    var myChildren = {};\r\n                    myParent[\"name\"] = parent;\r\n                    \r\n                    myChildren = [];\r\n                    myParent[\"children\"] = myChildren;\r\n                    //console.log(myParent);\r\n                    \r\n                    \r\n                    //initialize the links for cluster layout Begin Here....\r\n                    \r\n                    $j.each(rData, function(i){\r\n                        mySet.push(rData[i]['field']);            \t\r\n                    });\r\n                    \r\n                    var defArray = d3.set(mySet).values();\r\n                    \r\n                    $j.each(defArray, function(i){\r\n                        var myLinkObj = new linkObj(defArray[i]);\r\n                        myParent[\"children\"].push(myLinkObj);\r\n                        \r\n                    })\r\n                    function getRandomArbitrary(min, max) {\r\n                        return Math.random() * (max - min) + min;\r\n                    }\r\n                    var count = 0;\r\n                    $j.each(myParent[\"children\"], function(i){\r\n                        count++;\r\n                        //console.log('parent ' + myParent[\"children\"][i][\"name\"]);\r\n                        $j.each(rData, function(j){\r\n                            //console.log('inLoop ' + rData[j][\"field\"] )\r\n                            if(rData[j]['field'] == myParent[\"children\"][i][\"name\"]){\r\n                                \r\n                                var namedChild = {};\r\n                                namedChild[\"name\"] = rData[j]['childSObject'];\r\n                                namedChild[\"relationship\"] = rData[j]['relationshipName'];\r\n                                namedChild[\"size\"] = getRandomArbitrary(1, 4000);\r\n                                myParent[\"children\"][i][\"children\"].push(namedChild);\r\n                                \r\n                            }\r\n                            \r\n                        })\r\n                        \r\n                    })\r\n                    \r\n                    createG(myParent);\r\n                    \r\n                    //end Cluster Layout setup\r\n                    var fparent = field;\r\n                    var myfParent = {};\r\n                    var myfChildren = {};\r\n                    var fNodes = {};\r\n                    var fLinks = [];\r\n                    \r\n                    myfParent[\"name\"] = fparent;\r\n                    myfChildren = [];\r\n                    myfParent[\"children\"] = myfChildren;\r\n                    \r\n                    \r\n                    $j.each(rData, function(i){\r\n                        fSet.push(rData[i]['field']);            \t\r\n                    });\r\n                    \r\n                    var fArray = d3.set(fSet).values();\r\n                    \r\n                    $j.each(defArray, function(i){\r\n                        var myNodeObj = new fNodeObj(defArray[i]);\r\n                        myfParent[\"children\"].push(myNodeObj);\r\n                        myfParent[\"value\"] = 70;\r\n                        \r\n                    })\r\n                    function getRandomArbitrary(min, max) {\r\n                        return Math.random() * (max - min) + min;\r\n                    }\r\n                    var count = 0;\r\n                    $j.each(myfParent[\"children\"], function(i){\r\n                        count++;\r\n                        //console.log('parent ' + myParent[\"children\"][i][\"name\"]);\r\n                        $j.each(rData, function(j){\r\n                            //console.log('inLoop ' + rData[j][\"field\"] )\r\n                            if(rData[j]['field'] == myfParent[\"children\"][i][\"name\"]){\r\n                                \r\n                                var namedChild = {};\r\n                                namedChild[\"name\"] = rData[j]['childSObject'];\r\n                                namedChild[\"relationship\"] = rData[j]['relationshipName'];\r\n                                namedChild[\"value\"] = 75;\r\n                                myfParent[\"children\"][i][\"children\"].push(namedChild);\r\n                                myfParent[\"children\"][i][\"id\"] = rData[j]['field'];\r\n                                var myLinkObj = new fLinkObj(rData[j]['field'], rData[j]['childSObject']);\r\n                                fLinks.push(myLinkObj);\r\n                                \r\n                            }\r\n                            \r\n                        })\r\n                        \r\n                    })\r\n                    \r\n                    fNodes[\"nodes\"] = myfParent;\r\n                    fNodes[\"links\"] = fLinks;\r\n                    \r\n                    //console.log('fNodes ' + JSON.stringify(fNodes));    \r\n                    \r\n                    createForce(fNodes, defArray);\r\n                    \r\n                    \r\n                    var obj = d3.select(\"#objects\")              \r\n                    .append(\"ul\")\r\n                    .attr(\"class\", \"list-group enter\")\r\n                    .selectAll(\"li\")\r\n                    .data(recData)\r\n                    .enter()\r\n                    .append(\"li\")\r\n                    .attr(\"class\", \"list-group-item\")\r\n                    .style(\"color\", \"#2E3AD5\" )\r\n                    .style(\"font-size\", \"12px\")  \r\n                    .text(function(d, i){return  'name: ' + d.name;})\r\n                    \r\n                    obj.append(\"li\")\r\n                    .attr(\"class\", \"list-group-item\")\r\n                    .style(\"color\", \"#5C97ED\" )\r\n                    .style(\"font-size\", \"12px\")  \r\n                    .text(function(d, i){return 'record type id: ' + d.recordTypeId;})\r\n                    \r\n                    obj.append(\"li\")\r\n                    .attr(\"class\", \"list-group-item\")\r\n                    .style(\"color\", \"#5C97ED\" )\r\n                    .style(\"font-size\", \"12px\")  \r\n                    .text(function(d, i){return 'default mapping: ' + d.defaultRecordTypeMapping;})\r\n                    \r\n                    obj.append(\"li\")\r\n                    .attr(\"class\", \"list-group-item\")\r\n                    .style(\"color\", \"#5C97ED\" )\r\n                    .style(\"font-size\", \"12px\")  \r\n                    .text(function(d, i){return 'urls: ' + d.urls[d3.keys(d.urls)];})\r\n                    \r\n                    var graph = d3.select(\"#vis\")              \r\n                    \r\n                    var list = graph.append(\"ul\")\r\n                    .attr(\"class\", \"list-group enter\")\r\n                    .selectAll(\"li\")\r\n                    .data(rData)\r\n                    .enter()\r\n                    .append(\"li\")\r\n                    .attr(\"class\",function(d){return \"list-group-item \" +  d.field;})\r\n                    .append(\"a\")\r\n                    .attr(\"href\", \"#\")\r\n                    .style(\"color\", \"#2E3AD5\" )\r\n                    .style(\"font-size\", \"12px\")  \r\n                    .text(function(d, i){return 'field: ' + d.field;})\r\n                    .on(\"click\",  function(d){return addDiv(this, d)})\r\n                    \r\n                    list.append(\"li\")\r\n                    .attr(\"class\", \"list-group-item\")\r\n                    .style(\"color\", \"#5C97ED\" )\r\n                    .style(\"font-size\", \"12px\")  \r\n                    .text(function(d, i){return 'relationship name: ' + d.relationshipName;})\r\n                    \r\n                    list.append(\"li\")\r\n                    .attr(\"class\", \"list-group-item\")\r\n                    .style(\"color\", \"#5C97ED\" )\r\n                    .style(\"font-size\", \"12px\")  \r\n                    .text(function(d, i){return 'child sObject: ' + d.childSObject;})\r\n                    \r\n                    //console.log('child rel. ' + d3.keys(rData[0]));\r\n                    var height, width;\r\n                    width = document.getElementById(\"vis\").offsetWidth;\r\n                    height = width / 1.5;\r\n                    var header = d3.select(\".appType\")\r\n                    .append(\"h4\")\r\n                    .attr(\"class\", \"panel-heading enter\")\r\n                    .text(field + \" Fields\")\r\n                    \r\n                    var fields = d3.select(\"#fields\")              \r\n                    .append(\"ul\")\r\n                    .attr(\"class\", \"list-group enter\")\r\n                    .selectAll(\"li\")\r\n                    .data(fieldData)\r\n                    .enter()\r\n                    .append(\"li\")\r\n                    .attr(\"class\", \"list-group-item\")\r\n                    .append(\"a\")\r\n                    .attr(\"id\", function(d){return '#' + d.name;})\r\n                    .attr(\"href\", \"#\")\r\n                    .style(\"color\", \"#2E3AD5\" )\r\n                    .style(\"font-size\", \"12px\")  \r\n                    .text(function(d, i){return d.label;})\r\n                    .on(\"click\", function(d){\r\n                        d3.selectAll(\".child li\").remove();\r\n                        var lis = d3.select(this).append(\"ul\");\r\n                        \r\n                        objName = field;\r\n                        fieldLabel = d.name;\r\n                        \r\n                        lis\r\n                        .attr(\"class\",\"child\")\r\n                        \r\n                        lis\r\n                        .append(\"li\")\r\n                        .text('api name: ' + d.name)\r\n                        \r\n                        lis\r\n                        .append(\"li\")\r\n                        .text('type: ' + d.type)\r\n                        \r\n                        lis\r\n                        .append(\"li\")\r\n                        .text('field length: ' + d.length)\r\n                        //queryObj(rData);\r\n                        var qString = \"SELECT COUNT(\" + fieldLabel +\") FROM \" + objName + \" WHERE \" + fieldLabel + \" != null\"; \r\n                        conn.query(qString, function(err, result) {\r\n                            if (err) { return console.error(err); }\r\n                            //console.log(\"total : \" + result.totalSize);\r\n                            \r\n                            lis.append('li')\r\n                            .text('total number of records using field: ' +  result.records[0].expr0);\r\n                        })\r\n                        \r\n                    })\r\n                    $j(\"a\").click(function(e){\r\n                        e.preventDefault();\r\n                    })\r\n                    \r\n                });\r\n                function addDiv(i, mData){\r\n                    \r\n                    if($j(\".springy\").val() != null){\r\n                        $j(\".springy\").remove();}\r\n                    \r\n                    var wrap = i.parentNode;\r\n                    var $jcan = $j(\"<canvas class='springy' style='width:300px; height:150px;'></canvas>\")\r\n                    var newDiv = $j(wrap).append($jcan);\r\n                    \r\n                    var spring = new Springy.Graph();\r\n                    var children = spring.newNode({label: mData.childSObject});\r\n                    \r\n                    var parents = spring.newNode({label: mData.field});\r\n                    \r\n                    spring.newEdge(parents, children,{color: '#DC007C'});\r\n                    \r\n                    \r\n                    $j(function(){\r\n                        var springy = window.springy = $j(\".springy\").springy({\r\n                            graph: spring});\r\n                    });\r\n                    \r\n                    \r\n                }\r\n                \r\n                \r\n            }\r\n            \r\n            </script>\r\n        </body>\r\n    </html>\r\n</apex:page>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}